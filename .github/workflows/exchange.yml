name: Exchange CI Pipeline

run-name: ${{ github.actor }}

on:
  push:
    branches:
      - master
      - develop
      - 'release-*'
      - 'feature-*'
  pull_request:
    paths:
      - 'Exchange/**'
    branches:
      - master
      - develop
      - 'release-*'


jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8']
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 #fetch all branches

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r Exchange/requirements.txt

    - name: Create directories
      run: mkdir -p Exchange/reports
           mkdir -p Exchange/data

    - name: Run Pytest tests with coverage
      env:
        PYTHONPATH: ./Exchange/src
      run: |
        python -m pytest --cov=Exchange/src --cov-report=xml:Exchange/reports/coverage.xml --cov-report=html:Exchange/reports/htmlcov --junitxml=Exchange/reports/xunit-result.xml

    # placeholder to add postman tests

    - name: Lint with Ruff
      run: ruff --output-format=github .
      continue-on-error: true

#    - name: Wait to avoid timestamp issues
#      run: sleep 10

    - name: SonarQube Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: . # Adjust this if your project is in a subdirectory
        args: >
          -Dsonar.host.url=https://sonarcloud.io 
          -Dsonar.python.version=3
          -Dsonar.branch.name=${{ github.ref_name }}
          -Dsonar.sources=Exchange/src/
          -Dsonar.python.xunit.reportPath=Exchange/reports/xunit-result.xml
          -Dsonar.python.coverage.reportPaths=Exchange/reports/coverage.xml

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: Exchange/reports
